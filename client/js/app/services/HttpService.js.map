{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;sCAGYC,G,EAAI;AACd,gBAAGA,IAAIC,EAAP,EAAU;AACN,uBAAOD,GAAP;AACH,aAFD,MAEK;AACD,sBAAM,IAAIE,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACH;AACJ,S,CAAA;;;;;4BAIGC,G,EAAI;AAAA;;AAEJ,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADH,EAEFM,IAFE,CAEG;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFH,CAAP;;AAIA;;;;;;;;;;;;;;;;;;;;;AAwBH,S,CAAA;;;;6BAEIJ,G,EAAIK,I,EAAK;AAAA;;AAEV,mBAAOJ,MAAMD,GAAN,EAAW;AACdM,yBAAU,EAAC,gBAAgB,kBAAjB,EADI;AAEdC,wBAAS,MAFK;AAGdC,sBAAOC,KAAKC,SAAL,CAAeL,IAAf;;AAHO,aAAX,EAMNH,IANM,CAMD;AAAA,uBAAO,OAAKC,aAAL,EAAP;AAAA,aANC,EAOND,IAPM,CAOD;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAPC,CAAP;;AASA;;;;;;;;;;;;;;;AAeH,S,CAAA;;;;;KAEJ","file":"HttpService.js","sourcesContent":["class HttpService{\r\n\r\n\r\n    _handleErrors(res){\r\n        if(res.ok){\r\n            return res;\r\n        }else{\r\n            throw new Error(res.statusText);\r\n        }\r\n    }//_handleErrors\r\n\r\n\r\n\r\n    get(url){\r\n        \r\n        return fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json());\r\n\r\n        /*return new Promise((resolve, reject) =>{\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url);\r\n    \r\n            xhr.onreadystatechange = () =>{\r\n            \r\n    \r\n                 if(xhr.readyState == 4){\r\n                     if(xhr.status ==200){\r\n                        console.log(\"Buscando negociacoes\");\r\n                        let negociacoes = JSON.parse(xhr.responseText);\r\n                    \r\n                        resolve(negociacoes);\r\n                       \r\n                     }else{\r\n                        console.log(xhr.responseText);\r\n                        reject(xhr.responseText);\r\n                     }//fim else\r\n                 }//fim if externo\r\n            }//fim xhr.onreadystatechange = () =>{\r\n    \r\n    \r\n            xhr.send();\r\n        });*/\r\n    }//fim get\r\n\r\n    post(url,dado){\r\n\r\n        return fetch(url, {\r\n            headers : {\"Content-Type\": \"application/json\" },\r\n            method : 'post',\r\n            body : JSON.stringify(dado)\r\n\r\n        })\r\n        .then(res => this._handleErrors())\r\n        .then(res => res.json());\r\n\r\n        /*return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n            xhr.onreadystatechange = () =>{\r\n                if(xhr.readyState == 4){\r\n                    if(xhr.status == 200){\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    }else{\r\n                        reject(xhr.responseText);\r\n                    }//fim else\r\n                }//fim if\r\n            }//\r\n            xhr.send(JSON.stringify(dado));\r\n        });*/\r\n    }//post\r\n\r\n}//fim class"]}